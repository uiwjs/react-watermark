{"version":3,"file":"index.esm.js","sources":["../src/index.ts"],"sourcesContent":["export interface WatermarkOptions {\n  /** watermark text content */\n  content?: string | string[];\n  /**\n   * When the watermark is drawn, the rotation angle, in `Â°`. @default `-22`\n   */\n  rotate?: number;\n  /**\n   * High-definition print image source, for high-definition screen display,\n   * it is recommended to use 2x or 3x image, and priority to use image rendering watermark.\n   */\n  image?: string;\n  /** Horizontal spacing between watermarks. @default `212` */\n  gapX?: number;\n  /** vertical spacing between watermarks. @default `222` */\n  gapY?: number;\n  /** width of watermark. @default `120` */\n  width?: number;\n  /** height of watermark @default `64` */\n  height?: number;\n  /**\n   * The vertical offset of the watermark drawn on the canvas.\n   * Normally, the watermark is drawn in the middle position, ie `offsetTop = gapY / 2`\n   */\n  offsetLeft?: number;\n  /**\n   * The horizontal offset of the watermark drawn on the canvas, under normal circumstances,\n   * the watermark is drawn in the middle position, ie `offsetTop = gapX / 2`\n   */\n  offsetTop?: number;\n  /** text size @default `16` */\n  fontSize?: number;\n  /** text family @default `sans-serif` */\n  fontFamily?: string;\n  /** text weight @default `normal` */\n  fontWeight?: 'normal' | 'light' | 'weight' | number;\n  /** text color @default `rgba(0,0,0,.15)` */\n  fontColor?: string;\n  /** text style */\n  fontStyle?: CanvasFillStrokeStyles['fillStyle'];\n}\n\n/**\n * Returns the ratio of the current display device's physical pixel resolution to CSS pixel resolution\n * @param context\n * @returns\n */\nconst getPixelRatio = (context: any) => {\n  if (!context) {\n    return 1;\n  }\n  const backingStore =\n    context.backingStorePixelRatio ||\n    context.webkitBackingStorePixelRatio ||\n    context.mozBackingStorePixelRatio ||\n    context.msBackingStorePixelRatio ||\n    context.oBackingStorePixelRatio ||\n    context.backingStorePixelRatio ||\n    1;\n  return (window.devicePixelRatio || 1) / backingStore;\n};\n\nexport default class Watermark {\n  option: WatermarkOptions = {\n    gapX: 212,\n    gapY: 222,\n    width: 120,\n    height: 64,\n    rotate: -22,\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    fontColor: 'rgba(0,0,0,.15)',\n    fontSize: 16,\n    fontFamily: 'sans-serif',\n  };\n  constructor(options: WatermarkOptions) {\n    this.option = { ...this.option, ...options };\n  }\n  async create(): Promise<string> {\n    const {\n      image = '',\n      content = '',\n      gapX = 212,\n      gapY = 222,\n      width = 120,\n      height = 64,\n      rotate = -22,\n      fontStyle = 'normal',\n      fontWeight = 'normal',\n      fontColor = 'rgba(0,0,0,.15)',\n      fontSize = 16,\n      fontFamily = 'sans-serif',\n      offsetLeft,\n      offsetTop,\n    } = this.option;\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    const ratio = getPixelRatio(ctx);\n    const canvasWidth = `${(gapX + width) * ratio}px`;\n    const canvasHeight = `${(gapY + height) * ratio}px`;\n    const canvasOffsetLeft = offsetLeft || gapX / 2;\n    const canvasOffsetTop = offsetTop || gapY / 2;\n    canvas.setAttribute('width', canvasWidth);\n    canvas.setAttribute('height', canvasHeight);\n    return new Promise(async (resolve, reject) => {\n      if (ctx) {\n        ctx.translate(canvasOffsetLeft * ratio, canvasOffsetTop * ratio);\n        ctx.rotate((Math.PI / 180) * Number(rotate));\n        const markWidth = width * ratio;\n        const markHeight = height * ratio;\n        if (image) {\n          const img = new Image();\n          img.crossOrigin = 'anonymous';\n          img.referrerPolicy = 'no-referrer';\n          img.src = image;\n          img.onload = async () => {\n            ctx.drawImage(img, 0, 0, markWidth, markHeight);\n            return resolve(canvas.toDataURL());\n          };\n          img.onerror = (error) => {\n            return reject(error);\n          };\n        } else if (content) {\n          const markSize = Number(fontSize) * ratio;\n          ctx.font = `${fontStyle} normal ${fontWeight} ${markSize}px/${markHeight}px ${fontFamily}`;\n          ctx.fillStyle = fontColor;\n          if (Array.isArray(content)) {\n            content?.forEach((item: string, index: number) => ctx.fillText(item, 0, index * 50));\n          } else {\n            ctx.fillText(content, 0, 0);\n          }\n          return resolve(canvas.toDataURL());\n        }\n      } else {\n        return reject('Error: Canvas is not supported in the current environment');\n      }\n    });\n  }\n}\n"],"names":[],"mappings":"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"}