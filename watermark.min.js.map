{"version":3,"file":"watermark.min.js","sources":["../src/index.ts"],"sourcesContent":["export interface WatermarkOptions {\n  /** watermark text content */\n  content?: string | string[];\n  /**\n   * When the watermark is drawn, the rotation angle, in `Â°`. @default `-22`\n   */\n  rotate?: number;\n  /**\n   * High-definition print image source, for high-definition screen display,\n   * it is recommended to use 2x or 3x image, and priority to use image rendering watermark.\n   */\n  image?: string;\n  /** Horizontal spacing between watermarks. @default `212` */\n  gapX?: number;\n  /** vertical spacing between watermarks. @default `222` */\n  gapY?: number;\n  /** width of watermark. @default `120` */\n  width?: number;\n  /** height of watermark @default `64` */\n  height?: number;\n  /**\n   * The vertical offset of the watermark drawn on the canvas.\n   * Normally, the watermark is drawn in the middle position, ie `offsetTop = gapY / 2`\n   */\n  offsetLeft?: number;\n  /**\n   * The horizontal offset of the watermark drawn on the canvas, under normal circumstances,\n   * the watermark is drawn in the middle position, ie `offsetTop = gapX / 2`\n   */\n  offsetTop?: number;\n  /** text size @default `16` */\n  fontSize?: number;\n  /** text family @default `sans-serif` */\n  fontFamily?: string;\n  /** text weight @default `normal` */\n  fontWeight?: 'normal' | 'light' | 'weight' | number;\n  /** text color @default `rgba(0,0,0,.15)` */\n  fontColor?: string;\n  /** text style */\n  fontStyle?: CanvasFillStrokeStyles['fillStyle'];\n}\n\n/**\n * Returns the ratio of the current display device's physical pixel resolution to CSS pixel resolution\n * @param context\n * @returns\n */\nconst getPixelRatio = (context: any) => {\n  if (!context) {\n    return 1;\n  }\n  const backingStore =\n    context.backingStorePixelRatio ||\n    context.webkitBackingStorePixelRatio ||\n    context.mozBackingStorePixelRatio ||\n    context.msBackingStorePixelRatio ||\n    context.oBackingStorePixelRatio ||\n    context.backingStorePixelRatio ||\n    1;\n  return (window.devicePixelRatio || 1) / backingStore;\n};\n\nexport default class Watermark {\n  option: WatermarkOptions = {\n    gapX: 212,\n    gapY: 222,\n    width: 120,\n    height: 64,\n    rotate: -22,\n    fontStyle: 'normal',\n    fontWeight: 'normal',\n    fontColor: 'rgba(0,0,0,.15)',\n    fontSize: 16,\n    fontFamily: 'sans-serif',\n  };\n  constructor(options: WatermarkOptions) {\n    this.option = { ...this.option, ...options };\n  }\n  async create(): Promise<string> {\n    const {\n      image = '',\n      content = '',\n      gapX = 212,\n      gapY = 222,\n      width = 120,\n      height = 64,\n      rotate = -22,\n      fontStyle = 'normal',\n      fontWeight = 'normal',\n      fontColor = 'rgba(0,0,0,.15)',\n      fontSize = 16,\n      fontFamily = 'sans-serif',\n      offsetLeft,\n      offsetTop,\n    } = this.option;\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    const ratio = getPixelRatio(ctx);\n    const canvasWidth = `${(gapX + width) * ratio}px`;\n    const canvasHeight = `${(gapY + height) * ratio}px`;\n    const canvasOffsetLeft = offsetLeft || gapX / 2;\n    const canvasOffsetTop = offsetTop || gapY / 2;\n    canvas.setAttribute('width', canvasWidth);\n    canvas.setAttribute('height', canvasHeight);\n    return new Promise(async (resolve, reject) => {\n      if (ctx) {\n        ctx.translate(canvasOffsetLeft * ratio, canvasOffsetTop * ratio);\n        ctx.rotate((Math.PI / 180) * Number(rotate));\n        const markWidth = width * ratio;\n        const markHeight = height * ratio;\n        if (image) {\n          const img = new Image();\n          img.crossOrigin = 'anonymous';\n          img.referrerPolicy = 'no-referrer';\n          img.src = image;\n          img.onload = async () => {\n            ctx.drawImage(img, 0, 0, markWidth, markHeight);\n            return resolve(canvas.toDataURL());\n          };\n          img.onerror = (error) => {\n            return reject(error);\n          };\n        } else if (content) {\n          const markSize = Number(fontSize) * ratio;\n          ctx.font = `${fontStyle} normal ${fontWeight} ${markSize}px/${markHeight}px ${fontFamily}`;\n          ctx.fillStyle = fontColor;\n          if (Array.isArray(content)) {\n            content?.forEach((item: string, index: number) => ctx.fillText(item, 0, index * 50));\n          } else {\n            ctx.fillText(content, 0, 0);\n          }\n          return resolve(canvas.toDataURL());\n        }\n      } else {\n        return reject('Error: Canvas is not supported in the current environment');\n      }\n    });\n  }\n}\n"],"names":["constructor","options","this","option","gapX","gapY","width","height","rotate","fontStyle","fontWeight","fontColor","fontSize","fontFamily","Object","assign","async","image","content","offsetLeft","offsetTop","canvas","document","createElement","ctx","getContext","ratio","context","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","window","devicePixelRatio","getPixelRatio","canvasWidth","canvasHeight","canvasOffsetLeft","canvasOffsetTop","setAttribute","Promise","resolve","reject","translate","Math","PI","Number","markWidth","markHeight","img","Image","crossOrigin","referrerPolicy","src","onload","drawImage","toDataURL","onerror","error","markSize","font","fillStyle","Array","isArray","forEach","item","index","fillText"],"mappings":";iPA8Dc,MAaZA,YAAYC,GAZZC,KAAAC,OAA2B,CACzBC,KAAM,IACNC,KAAM,IACNC,MAAO,IACPC,OAAQ,GACRC,QAAS,GACTC,UAAW,SACXC,WAAY,SACZC,UAAW,kBACXC,SAAU,GACVC,WAAY,cAGZX,KAAKC,OAAcW,OAAAC,OAAAD,OAAAC,OAAA,CAAA,EAAAb,KAAKC,QAAWF,EACpC,CACDe,eACE,MAAMC,MACJA,EAAQ,GAAEC,QACVA,EAAU,GAAEd,KACZA,EAAO,IAAGC,KACVA,EAAO,IAAGC,MACVA,EAAQ,IAAGC,OACXA,EAAS,GAAEC,OACXA,GAAS,GAAGC,UACZA,EAAY,SAAQC,WACpBA,EAAa,SAAQC,UACrBA,EAAY,kBAAiBC,SAC7BA,EAAW,GAAEC,WACbA,EAAa,aAAYM,WACzBA,EAAUC,UACVA,GACElB,KAAKC,OACHkB,EAASC,SAASC,cAAc,UAChCC,EAAMH,EAAOI,WAAW,MACxBC,EAlDY,CAACC,IACrB,IAAKA,EACH,OAAO,EAET,MAAMC,EACJD,EAAQE,wBACRF,EAAQG,8BACRH,EAAQI,2BACRJ,EAAQK,0BACRL,EAAQM,yBACRN,EAAQE,wBACR,EACF,OAAQK,OAAOC,kBAAoB,GAAKP,CAAY,EAsCpCQ,CAAcZ,GACtBa,GAAkBjC,EAAOE,GAASoB,EAApB,KACdY,GAAmBjC,EAAOE,GAAUmB,EAArB,KACfa,EAAmBpB,GAAcf,EAAO,EACxCoC,EAAkBpB,GAAaf,EAAO,EAG5C,OAFAgB,EAAOoB,aAAa,QAASJ,GAC7BhB,EAAOoB,aAAa,SAAUH,GACvB,IAAII,SAAQ1B,MAAO2B,EAASC,KACjC,IAAIpB,EA6BF,OAAOoB,EAAO,6DA7BP,CACPpB,EAAIqB,UAAUN,EAAmBb,EAAOc,EAAkBd,GAC1DF,EAAIhB,OAAQsC,KAAKC,GAAK,IAAOC,OAAOxC,IACpC,MAAMyC,EAAY3C,EAAQoB,EACpBwB,EAAa3C,EAASmB,EAC5B,GAAIT,EAAO,CACT,MAAMkC,EAAM,IAAIC,MAChBD,EAAIE,YAAc,YAClBF,EAAIG,eAAiB,cACrBH,EAAII,IAAMtC,EACVkC,EAAIK,OAASxC,UACXQ,EAAIiC,UAAUN,EAAK,EAAG,EAAGF,EAAWC,GAC7BP,EAAQtB,EAAOqC,cAExBP,EAAIQ,QAAWC,GACNhB,EAAOgB,EAEjB,MAAM,GAAI1C,EAAS,CAClB,MAAM2C,EAAWb,OAAOpC,GAAYc,EAQpC,OAPAF,EAAIsC,KAAO,GAAGrD,YAAoBC,KAAcmD,OAAcX,OAAgBrC,IAC9EW,EAAIuC,UAAYpD,EACZqD,MAAMC,QAAQ/C,GAChBA,SAAAA,EAASgD,SAAQ,CAACC,EAAcC,IAAkB5C,EAAI6C,SAASF,EAAM,EAAW,GAARC,KAExE5C,EAAI6C,SAASnD,EAAS,EAAG,GAEpByB,EAAQtB,EAAOqC,YACvB,CACF,CAEA,GAEJ"}